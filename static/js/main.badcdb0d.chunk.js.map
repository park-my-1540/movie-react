{"version":3,"sources":["lib/useAsync.js","lib/Provider.js","comp/Item.js","comp/List.js","comp/Home.js","comp/SearchBar.js","comp/Categories.js","comp/MoviePage.js","comp/MovieDetail.js","router/HashRouter.js","comp/MainPage.js","App.js","index.js"],"names":["reducer","state","action","type","loading","data","error","useAsync","callback","genre","useReducer","dispatch","fetchData","a","movieData","useEffect","QueryContext","createContext","Provider","children","useState","search","setSearch","value","useQueryContext","useContext","Item","cover_img","rating","id","title","desc","LinkStyle","styled","Link","to","pathname","className","src","alt","List","map","movie","medium_cover_image","description_full","Home","axios","get","movies","mainData","console","log","SearchBar","refetch","name","onChange","e","target","onClick","categoris","Block","div","NavBlock","NavLink","Categories","c","activeClassName","exact","Wrapper","MoviePage","match","undefined","params","category","MovieDetail","location","history","goBack","HashRouter","path","component","NavStyle","MainPage","App","rootElement","document","getElementById","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.badcdb0d.chunk.js","sourcesContent":["import {React,useReducer,useEffect} from \"react\";\r\n\r\n/**\r\n * 하는 일 : state 관리. useEffect 설정.\r\n * @parameter : getData -> 콜백함수.\r\n *              [genre] -> 카테고리 바뀔 때마다 \r\n */\r\n\r\nfunction reducer(state,action){\r\n  switch (action.type) {\r\n    case 'LOADING':\r\n      return {\r\n        loading: true,\r\n        data: null,\r\n        error: null\r\n      };\r\n    case 'SUCCESS' : \r\n      return {  \r\n      loading : false,\r\n      data : action.data,\r\n      error : null\r\n    };\r\n    case 'ERROR' : \r\n      return {\r\n      loading : false,\r\n      data : null,\r\n      error : action.error\r\n    };\r\n    case 'END' : \r\n      return {\r\n      loading : false,\r\n      data : null,\r\n      error : null\r\n    }\r\n    default : return false;\r\n  }\r\n}\r\nexport default function useAsync(callback,[genre]) {\r\n  const [state,dispatch] = useReducer(reducer,{ ////!!!!!!!!!!!!!!!\r\n    loading : false,\r\n    data : null,\r\n    error : null\r\n  });\r\n  const fetchData = async() => { \r\n    dispatch({type:'LOADING'});\r\n    try{\r\n      const movieData = await callback();\r\n      dispatch({type:'SUCCESS',data:movieData});\r\n    }catch(e){\r\n      dispatch({type:'ERROR',error:e});\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    fetchData();\r\n    return()=>dispatch({type:'END'})\r\n  },[genre]);\r\n\r\n  return [state,fetchData];/////!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n}\r\n","import {React,useState,createContext,useContext} from \"react\";\r\n\r\n/**\r\n * 하는 일 : 검색값 context로 관리. \r\n */\r\n\r\nconst QueryContext = createContext();\r\nexport default function Provider({children}) {\r\n  const [search,setSearch]  = useState('');\r\n  return (\r\n    <>\r\n      <QueryContext.Provider value={[search,setSearch]}>\r\n        {children}\r\n      </QueryContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useQueryContext(){\r\n  return useContext(QueryContext);\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n/**\r\n * 하는 일 : List에서 보내온 값들로 렌더링, \r\n * 영화 상세정보 링크에 prop 전달\r\n * @parameter : cover_img, rating,id,title,desc\r\n */\r\n\r\nexport default function Item({cover_img, rating,id,title,desc}) {\r\n\r\n  const LinkStyle= styled(Link)`\r\n    display:inline-block;\r\n    text-decoration:none;\r\n  `;\r\n\r\n  return (\r\n    <>\r\n      <li id={id}>\r\n        <LinkStyle to={{\r\n          pathname:\"/movedetail\",\r\n          state : {cover_img,rating,title,desc}\r\n        }}>\r\n          <div className=\"movie-item\">\r\n            <div className=\"img-box\">\r\n              <img src={cover_img} alt=\"\" />\r\n            </div>\r\n            <div className=\"txt-box\">\r\n              <span className=\"title\">{title}</span>\r\n              <span className=\"rating\">{rating}</span>\r\n            </div>\r\n          </div>\r\n        </LinkStyle>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport Item from \"./Item\";\r\n/**\r\n * 하는 일 : 데이터를 받아와서 Item에 넣어 Map을 통해 Item 렌더링.\r\n */\r\nexport default function List({state}) {\r\n\r\n  const {data:movieData,loading} = state;\r\n\r\n  if(loading) return (\r\n    <div className=\"loading\">Loading&#8230;</div>\r\n    );\r\n  if(!movieData) return false;\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"movie-list\">\r\n        <ul>\r\n          {\r\n            movieData.map(movie=>{\r\n              return(\r\n                <Item \r\n                  id={movie.id} \r\n                  key={movie.id} \r\n                  cover_img={movie.medium_cover_image} \r\n                  rating={movie.rating} \r\n                  title={movie.title}\r\n                  desc={movie.description_full}\r\n                  />\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React ,{useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport useAsync from \"../lib/useAsync\";\r\nimport {useQueryContext} from \"../lib/Provider\";\r\nimport MovieList from \"./List\";\r\n\r\n/**\r\n * 하는 일 : home 페이지\r\n */\r\n\r\nexport default function Home() {\r\n  const getData = async()=>{\r\n    const {data : {data: {movies}}} = await axios.get(`https://yts-proxy.now.sh/list_movies.json`);\r\n    return movies;\r\n  }\r\n  const [state,refetch] = useAsync(getData,[]);\r\n  const mainData = state.data;\r\n  console.log(mainData);\r\n  return (\r\n  <>\r\n    <h1 className=\"tit\">HOME</h1>\r\n    <MovieList state={state} />\r\n  </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {useQueryContext} from \"../lib/Provider\";\r\n\r\n/**\r\n * 하는 일 : 키워드 검색 시 키워드를 포함한 제목이 조회된다.\r\n * parameter : inputValue-> useState로 관리.\r\n */\r\n\r\nexport default function SearchBar({refetch}) {\r\n  const [search,setSearch]  = useQueryContext();\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"searchBar\">\r\n        <input type=\"text\" value={search} name=\"search\" onChange={(e)=> setSearch(e.target.value)}/>\r\n        <button type=\"button\" onClick={refetch}>검색</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n/**\r\n * 하는 일 : 선택한 카테고리 값을 전달하고, 선택한 링크 활성화 스타일이 입혀짐.\r\n */\r\nconst categoris=[\r\n  'comedy',\r\n  'romance',\r\n  'horror',\r\n  'drama',\r\n  'crime'\r\n]\r\nconst Block = styled.div`\r\n  width : 500px;\r\n  height : auto;\r\n  a{\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    background: #fff;\r\n    color: #000;\r\n    -webkit-text-decoration: none;\r\n    text-decoration: none;\r\n    border-radius: 13px;\r\n  }\r\n`;\r\nconst NavBlock=styled(NavLink)`\r\n  &:active,&:hover{\r\n    color:red;\r\n  }\r\n  &.active{\r\n    color:red;\r\n  }\r\n`;\r\nexport default function Categories() {\r\n  return (\r\n  <>\r\n  <Block>\r\n    {\r\n      categoris.map(c=>{\r\n        return (<NavBlock \r\n                      key={c} \r\n                      to={c==='all'?'/moviepage':`/moviepage/${c}`} \r\n                      activeClassName='active'\r\n                      exact>{c}\r\n                      </NavBlock>\r\n                      )\r\n      })\r\n    }\r\n  </Block>\r\n  \r\n  </>);\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport useAsync from \"../lib/useAsync\";\r\nimport {useQueryContext} from \"../lib/Provider\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Categories from \"./Categories\";\r\nimport MovieList from \"./List\";\r\n\r\n/**\r\n * 하는 일 : API 데이터 가져온 후 필요 컴포넌트에 전달.\r\n */\r\nconst Wrapper = styled.div`\r\n  position:relative;\r\n  overflow-x : hidden;\r\n  padding-top:50px;\r\n  width:100%;\r\n`;\r\nexport default function MoviePage({match}) {\r\n\r\n  var genre;\r\n  match.params.category===undefined ? \r\n  genre='all': \r\n  genre = match.params.category;\r\n\r\n  const [search]  = useQueryContext();\r\n\r\n  const getData = async()=>{\r\n    const {data : {data: {movies}}} = await axios.get(`https://yts-proxy.now.sh/list_movies.json?query_term=${search}&genre=${genre}`);\r\n    return movies;\r\n  }\r\n  const [state,refetch] = useAsync(getData,[genre]);\r\n\r\n  return (\r\n    <>\r\n    <Wrapper>\r\n      <Categories category={genre}/> \r\n      <SearchBar refetch={refetch} />\r\n      <MovieList state={state} />\r\n    </Wrapper>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n/**\r\n * 하는 일 : 라우터로 전환하며 해당 영화의 디테일 정보를 나타내는 페이지.\r\n */\r\nexport default function MovieDetail({location,history}) {\r\n  const { cover_img,title,rating ,desc} =location.state;\r\n  return (<>\r\n  <button type=\"button\" onClick={()=>history.goBack()}>뒤로가기</button>\r\n  <div className=\"detail_wrap\">\r\n    <div className=\"img_box\">\r\n      <img src={cover_img} alt={title} />\r\n    </div>\r\n    <p className=\"title01\">\r\n      {title}\r\n    </p>\r\n    <p className=\"title02\">\r\n      {desc}\r\n    </p>\r\n    <p className=\"desc\">rating : {rating}</p>\r\n  </div>\r\n  </>);\r\n}\r\n","import React from \"react\";\r\nimport {Route } from \"react-router-dom\";\r\nimport Home from \"../comp/Home\";\r\nimport MoviePage from \"../comp/MoviePage\";\r\nimport MovieDetail from \"../comp/MovieDetail\";\r\n\r\n/**\r\n * 하는 일 : Router 태그들을 감쌈.\r\n */\r\n\r\nexport default function HashRouter() {\r\n  return (\r\n  <>\r\n    <Route path=\"/\" exact={true} component={Home}/>\r\n    <Route path=\"/moviepage\" exact={true} component={MoviePage}/>\r\n    <Route path=\"/moviepage/:category\"  exact={true} component={MoviePage}/> \r\n    <Route path=\"/movedetail\" exact={true}  component={MovieDetail}/> \r\n  </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport HashRouter from \"../router/HashRouter\"\r\n\r\n/**\r\n * 하는 일 : Route 설정. Router 오타 x\r\n */\r\n\r\nconst NavStyle= styled(NavLink)`\r\n  color:#000;\r\n  text-decoration : none;\r\n`;\r\nexport default function MainPage() {\r\n  return (\r\n    <>\r\n      <div className=\"gnb-wrap\">\r\n        <NavStyle to=\"/\" exact={true}>HOME</NavStyle>\r\n        <NavStyle to=\"/moviepage\" >영화검색</NavStyle>\r\n      </div>\r\n      <HashRouter/>\r\n    </>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport MainPage from \"./comp/MainPage\";\nimport MovieProvider from \"./lib/Provider\";\n\n/**\n * 하는 일 : MainPage 렌더링, Provider \n * @parameter : cover_img, rating,id,title,desc\n */\n\nexport default function App() {\n  return (\n    <>\n      <MovieProvider>\n      <MainPage />\n      </MovieProvider>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n  <StrictMode>\n    <App />\n  </StrictMode>\n  </BrowserRouter>\n  ,\n  rootElement\n);\n"],"sourceRoot":""}